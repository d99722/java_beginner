{\rtf1\ansi\ansicpg949\cocoartf2511
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset129 AppleSDGothicNeo-Regular;\f1\fnil\fcharset129 AppleSDGothicNeo-Bold;\f2\fswiss\fcharset0 Helvetica-Bold;
\f3\fswiss\fcharset0 Helvetica;\f4\fswiss\fcharset0 Helvetica-BoldOblique;}
{\colortbl;\red255\green255\blue255;\red127\green0\blue85;\red0\green0\blue192;\red106\green62\blue62;
\red42\green0\blue255;}
{\*\expandedcolortbl;;\csgenericrgb\c49804\c0\c33333;\csgenericrgb\c0\c0\c75294;\csgenericrgb\c41569\c24314\c24314;
\csgenericrgb\c16471\c0\c100000;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11000\viewh19580\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs40 \cf0 ch35. \'bf\'b9\'bf\'dc3 - \'b8\'b8\'b5\'e9\'b1\'e2\
\

\f1\b \ul * \'bc\'d2\'ba\'f1\'c0\'da\'bf\'a1\'bc\'ad \'bb\'fd\'bb\'ea\'c0\'da\'b7\'ce
\f0\b0 \ulnone \
- \'c1\'f6\'b1\'dd\'b1\'ee\'c1\'f6 \'bf\'ec\'b8\'ae\'b4\'c2 API\'c0\'c7 \'bc\'d2\'ba\'f1\'c0\'da\'b7\'ce\'bc\'ad, \'b4\'f8\'c1\'f6\'b0\'c5\'b3\'aa \'c3\'b3\'b8\'ae\'c7\'cf\'b4\'c2 \'b9\'fd\'c0\'bb \'b9\'e8\'bf\'fc\'b4\'d9.\
- \'c0\'cc\'c1\'a6\'b4\'c2 API\'c0\'c7 \'bb\'fd\'bb\'ea\'c0\'da\'b7\'ce\'bc\'ad, \'bf\'b9\'bf\'dc\'b8\'a6 \'b8\'b8\'b5\'e9\'b0\'ed \'bb\'e7\'bf\'eb\'c0\'da\'bf\'a1\'b0\'d4 \'be\'ee\'b6\'bb\'b0\'d4 \'c3\'b3\'b8\'ae\'c7\'cf\'b0\'d4 \'c7\'d2\'c1\'f6\'b8\'a6 \'c1\'a4\'c7\'d2 \'bc\'f6 \'c0\'d6\'b4\'d9.\
\
\pard\pardeftab720\partightenfactor0

\f2\b\fs32 \cf2 package
\f3\b0 \cf0  java_tutorials.exception;\
\

\f2\b \cf2 class
\f3\b0 \cf0  Calculator\{\
	
\f2\b \cf2 int
\f3\b0 \cf0  \cf3 left\cf0 , \cf3 right\cf0 ;\
	
\f2\b \cf2 public
\f3\b0 \cf0  
\f2\b \cf2 void
\f3\b0 \cf0  setOprands(
\f2\b \cf2 int
\f3\b0 \cf0  \cf4 left\cf0 , 
\f2\b \cf2 int
\f3\b0 \cf0  \cf4 right\cf0 ) \{\
		
\f2\b \cf2 this
\f3\b0 \cf0 .\cf3 left\cf0  = \cf4 left\cf0 ;\
		
\f2\b \cf2 this
\f3\b0 \cf0 .\cf3 right\cf0  = \cf4 right\cf0 ;\
	\}\
	
\f2\b \cf2 public
\f3\b0 \cf0  
\f2\b \cf2 void
\f3\b0 \cf0  divide() \{\
		
\f2\b \cf2 try
\f3\b0 \cf0  \{\
			System.
\f4\i\b \cf3 out
\f3\i0\b0 \cf0 .println(\cf5 "
\f0 \'b0\'e8\'bb\'ea\'b0\'e1\'b0\'fa\'b4\'c2
\f3  "\cf0 );\
			System.
\f4\i\b \cf3 out
\f3\i0\b0 \cf0 .println(
\f2\b \cf2 this
\f3\b0 \cf0 .\cf3 left\cf0 /
\f2\b \cf2 this
\f3\b0 \cf0 .\cf3 right\cf0 );\
			System.
\f4\i\b \cf3 out
\f3\i0\b0 \cf0 .println(\cf5 " 
\f0 \'c0\'d4\'b4\'cf\'b4\'d9
\f3 ."\cf0 );\
		\} 
\f2\b \cf2 catch
\f3\b0 \cf0  (Exception \cf4 e\cf0 ) \{\
			System.
\f4\i\b \cf3 out
\f3\i0\b0 \cf0 .println(\cf5 "\\n\\ne.getMessage()\\n"\cf0 +\cf4 e\cf0 .getMessage());\
			System.
\f4\i\b \cf3 out
\f3\i0\b0 \cf0 .println(\cf5 "\\n\\ne.toString()\\n"\cf0 +\cf4 e\cf0 .toString());\
			System.
\f4\i\b \cf3 out
\f3\i0\b0 \cf0 .println(\cf5 "\\n\\ne.printStackTrace()"\cf0 );\
			\cf4 e\cf0 .printStackTrace();\
		\}\
		System.
\f4\i\b \cf3 out
\f3\i0\b0 \cf0 .println(\cf5 "Divide End"\cf0 );\
	\}\
\}\
\

\f2\b \cf2 public
\f3\b0 \cf0  
\f2\b \cf2 class
\f3\b0 \cf0  CalculatorDemo \{\
\
	
\f2\b \cf2 public
\f3\b0 \cf0  
\f2\b \cf2 static
\f3\b0 \cf0  
\f2\b \cf2 void
\f3\b0 \cf0  main(String[] \cf4 args\cf0 ) \{\
		Calculator \cf4 c1\cf0  = 
\f2\b \cf2 new
\f3\b0 \cf0  Calculator();\
		\cf4 c1\cf0 .setOprands(10,0);\
		\cf4 c1\cf0 .divide();\
\
	\}\
\
\}\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs40 \cf0 - \'bf\'b9\'bf\'dc\'c3\'b3\'b8\'ae \'b9\'e6\'b9\'fd:\
\pard\pardeftab720\partightenfactor0

\f3\fs32 \cf0 		
\f2\b \cf2 if
\f3\b0 \cf0 (\cf4 right\cf0  == 0) \{\
			
\f2\b \cf2 throw
\f3\b0 \cf0  
\f2\b \cf2 new
\f3\b0 \cf0  IllegalArgumentException(\cf5 "
\f0 \'b5\'ce\'b9\'f8\'c2\'b0
\f3  
\f0 \'c0\'ce\'c0\'da\'b4\'c2
\f3  0
\f0 \'c0\'bb
\f3  
\f0 \'c7\'e3\'bf\'eb\'c7\'cf\'c1\'f6
\f3  
\f0 \'be\'ca\'bd\'c0\'b4\'cf\'b4\'d9
\f3 ."\cf0 );\
		\}
\f0\fs40 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 	1. setOprands\'bf\'a1\'bc\'ad right\'b0\'a1 0\'c0\'ce\'c1\'f6 \'c8\'ae\'c0\'ce\'c7\'d8\'ba\'b8\'b1\'e2\
\
\pard\pardeftab720\partightenfactor0

\f3\fs32 \cf0 		
\f2\b \cf2 if
\f3\b0 \cf0 (\cf3 right\cf0  == 0) \{\
			
\f2\b \cf2 throw
\f3\b0 \cf0  
\f2\b \cf2 new
\f3\b0 \cf0  ArithmeticException(\cf5 "0
\f0 \'c0\'b8\'b7\'ce
\f3  
\f0 \'b3\'aa\'b4\'ad
\f3  
\f0 \'bc\'f6
\f3  
\f0 \'be\'f8\'bd\'c0\'b4\'cf\'b4\'d9
\f3 ."\cf0 );\
		\}
\f0\fs40 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 	2. divide\'bf\'a1\'bc\'ad ArithmetricException\'c0\'cc \'b9\'df\'bb\'fd\'c7\'cf\'b4\'c2 \'c1\'f6 \'c8\'ae\'c0\'ce\'c7\'d8\'ba\'b8\'b1\'e2\
- \'c1\'b6\'b0\'c7\'b9\'ae\'b0\'fa throw new\'b8\'a6 \'c5\'eb\'c7\'d8 \'c1\'f7\'c1\'a2 \'bf\'a1\'b7\'af\'b8\'a6 \'b9\'df\'bb\'fd\'bd\'c3\'c5\'b3 \'bc\'f6 \'c0\'d6\'b0\'ed, \'b8\'c6\'b6\'f4\'bf\'a1 \'b5\'fb\'b6\'f3 \'be\'ee\'b6\'b2 \'bf\'a1\'b7\'af\'b8\'a6 \'bb\'e7\'bf\'eb\'c7\'d2\'c1\'f6\'b4\'c2 \'b4\'de\'b6\'f3\'c1\'f8\'b4\'d9.\
\
\pard\pardeftab720\partightenfactor0

\f2\b\fs32 \cf2 package
\f3\b0 \cf0  java_tutorials.exception;\
\

\f2\b \cf2 class
\f3\b0 \cf0  Calculator\{\
	
\f2\b \cf2 int
\f3\b0 \cf0  \cf3 left\cf0 , \cf3 right\cf0 ;\
	
\f2\b \cf2 public
\f3\b0 \cf0  
\f2\b \cf2 void
\f3\b0 \cf0  setOprands(
\f2\b \cf2 int
\f3\b0 \cf0  \cf4 left\cf0 , 
\f2\b \cf2 int
\f3\b0 \cf0  \cf4 right\cf0 ) \{\
		
\f2\b \cf2 this
\f3\b0 \cf0 .\cf3 left\cf0  = \cf4 left\cf0 ;\
		
\f2\b \cf2 this
\f3\b0 \cf0 .\cf3 right\cf0  = \cf4 right\cf0 ;\
	\}\
	
\f2\b \cf2 public
\f3\b0 \cf0  
\f2\b \cf2 void
\f3\b0 \cf0  divide() \{\
		
\f2\b \cf2 if
\f3\b0 \cf0 (\cf3 right\cf0  == 0) \{\
			
\f2\b \cf2 throw
\f3\b0 \cf0  
\f2\b \cf2 new
\f3\b0 \cf0  ArithmeticException(\cf5 "0
\f0 \'c0\'b8\'b7\'ce
\f3  
\f0 \'b3\'aa\'b4\'ad
\f3  
\f0 \'bc\'f6
\f3  
\f0 \'be\'f8\'bd\'c0\'b4\'cf\'b4\'d9
\f3 ."\cf0 );\
		\}\
		
\f2\b \cf2 try
\f3\b0 \cf0  \{\
			System.
\f4\i\b \cf3 out
\f3\i0\b0 \cf0 .println(\cf5 "
\f0 \'b0\'e8\'bb\'ea\'b0\'e1\'b0\'fa\'b4\'c2
\f3  "\cf0 );\
			System.
\f4\i\b \cf3 out
\f3\i0\b0 \cf0 .println(
\f2\b \cf2 this
\f3\b0 \cf0 .\cf3 left\cf0 /
\f2\b \cf2 this
\f3\b0 \cf0 .\cf3 right\cf0 );\
			System.
\f4\i\b \cf3 out
\f3\i0\b0 \cf0 .println(\cf5 " 
\f0 \'c0\'d4\'b4\'cf\'b4\'d9
\f3 ."\cf0 );\
		\} 
\f2\b \cf2 catch
\f3\b0 \cf0  (Exception \cf4 e\cf0 ) \{\
			System.
\f4\i\b \cf3 out
\f3\i0\b0 \cf0 .println(\cf5 "\\n\\ne.getMessage()\\n"\cf0 +\cf4 e\cf0 .getMessage());\
			System.
\f4\i\b \cf3 out
\f3\i0\b0 \cf0 .println(\cf5 "\\n\\ne.toString()\\n"\cf0 +\cf4 e\cf0 .toString());\
			System.
\f4\i\b \cf3 out
\f3\i0\b0 \cf0 .println(\cf5 "\\n\\ne.printStackTrace()"\cf0 );\
			\cf4 e\cf0 .printStackTrace();\
		\}\
		System.
\f4\i\b \cf3 out
\f3\i0\b0 \cf0 .println(\cf5 "Divide End"\cf0 );\
	\}\
\}\
\

\f2\b \cf2 public
\f3\b0 \cf0  
\f2\b \cf2 class
\f3\b0 \cf0  CalculatorDemo \{\
\
	
\f2\b \cf2 public
\f3\b0 \cf0  
\f2\b \cf2 static
\f3\b0 \cf0  
\f2\b \cf2 void
\f3\b0 \cf0  main(String[] \cf4 args\cf0 ) \{\
		Calculator \cf4 c1\cf0  = 
\f2\b \cf2 new
\f3\b0 \cf0  Calculator();\
		\cf4 c1\cf0 .setOprands(10,0);\
		
\f2\b \cf2 try
\f3\b0 \cf0  \{\
			\cf4 c1\cf0 .divide();\
		\} 
\f2\b \cf2 catch
\f3\b0 \cf0 (ArithmeticException \cf4 e\cf0 ) \{\
			System.
\f4\i\b \cf3 out
\f3\i0\b0 \cf0 .println(\cf4 e\cf0 .getMessage());\
		\}\
\
	\}\
\
\}\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs40 \cf0 - \'c0\'db\'b5\'bf \'b7\'ce\'c1\'f7 \
1. c1.divide()\'b8\'a6 \'bd\'c7\'c7\'e0\'c7\'d1\'b4\'d9.\
2. divde() method\'bf\'a1\'bc\'ad if\'c0\'fd\'bf\'a1 \'b0\'c9\'b8\'ae\'b0\'ed, \'c0\'db\'b5\'bf\'c0\'cc \'c1\'df\'b4\'dc\'b5\'c8\'b4\'d9.\
3. c1.dvide()\'b0\'a1 try\'c0\'fd\'bf\'a1 \'c0\'d6\'be\'fa\'c0\'b8\'b9\'c7\'b7\'ce catch \'c0\'fd\'c0\'bb \'bd\'c7\'c7\'e0\'c7\'d1\'b4\'d9.\
4. e\'b6\'f3\'b4\'c2 \'ba\'af\'bc\'f6\'bf\'a1 throw new\'b7\'ce \'c1\'a4\'c0\'c7\'b5\'c8 \'b0\'aa\'c0\'cc \'b4\'e3\'b1\'e4\'b4\'d9.\
5. e.getMessage()\'b8\'a6 \'c7\'df\'c0\'bb \'b6\'a7, \'bf\'ec\'b8\'ae\'b0\'a1 \'c1\'a4\'c0\'c7\'c7\'d8\'c1\'d8 \'bf\'c0\'b7\'f9\'b8\'de\'bd\'c3\'c1\'f6\'b0\'a1 \'b3\'aa\'bf\'c2\'b4\'d9.\
\

\f1\b \ul * \'b4\'eb\'c7\'a5\'c0\'fb\'c0\'ce \'bf\'c0\'b7\'f9
\f0\b0 \ulnone \
IllegalArgumentException\
	: \'b8\'c5\'b0\'b3\'ba\'af\'bc\'f6\'b0\'a1 \'c0\'c7\'b5\'b5\'c4\'a1 \'be\'ca\'c0\'ba \'bb\'f3\'c8\'b2\'c0\'bb \'c0\'af\'b9\'df\'bd\'c3\'c5\'b3 \'b6\'a7\
IllegalStateException\
	: \'b8\'de\'bc\'d2\'b5\'e5\'b8\'a6 \'c8\'a3\'c3\'e2\'c7\'cf\'b1\'e2 \'c0\'a7\'c7\'d1 \'bb\'f3\'c5\'c2\'b0\'a1 \'be\'c6\'b4\'d2 \'b6\'a7\
NullPointerException\
	: \'b8\'c5\'b0\'b3 \'ba\'af\'bc\'f6 \'b0\'aa\'c0\'cc null \'c0\'cf \'b6\'a7\
IndexOutOfBoundsException\
	: \'c0\'ce\'b5\'a6\'bd\'ba \'b8\'c5\'b0\'b3 \'ba\'af\'bc\'f6 \'b0\'aa\'c0\'cc \'b9\'fc\'c0\'a7\'b8\'a6 \'b9\'fe\'be\'ee\'b3\'af \'b6\'a7\
ArithmeticException\
	: \'bb\'ea\'bc\'fa\'c0\'fb\'c0\'ce \'bf\'ac\'bb\'ea\'bf\'a1 \'bf\'c0\'b7\'f9\'b0\'a1 \'c0\'d6\'c0\'bb \'b6\'a7\
\

\f1\b \ul * \'bb\'e7\'bf\'eb\'c0\'da\'bf\'a1\'b0\'d4 \'bf\'c0\'b7\'f9\'b8\'a6 \'c3\'b3\'b8\'ae\'c7\'cf\'b0\'d4 \'c7\'cf\'b1\'e2
\f0\b0 \ulnone \
\pard\pardeftab720\partightenfactor0

\f2\b\fs32 \cf2 package
\f3\b0 \cf0  java_tutorials.exception;\
\

\f2\b \cf2 import
\f3\b0 \cf0  java.io.IOException;\
\

\f2\b \cf2 class
\f3\b0 \cf0  E \{\
	
\f2\b \cf2 void
\f3\b0 \cf0  throwArithmeticException() \{\
		
\f2\b \cf2 throw
\f3\b0 \cf0  
\f2\b \cf2 new
\f3\b0 \cf0  ArithmeticException();\
	\}\
	
\f2\b \cf2 void
\f3\b0 \cf0  throwIOException() \{\
		
\f2\b \cf2 \ul \ulc2 throw
\f3\b0 \cf0 \ulc0  
\f2\b \cf2 \ulc2 new
\f3\b0 \cf0 \ulc0  IOException();\ulnone \
	\}\
\}
\f0\fs40 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 - \'bf\'d6 \'c0\'ad \'b8\'de\'bc\'d2\'b5\'e5\'b4\'c2 \'bd\'c7\'c7\'e0\'c0\'cc \'b5\'c7\'b0\'ed, \'b9\'d8 \'b8\'de\'bc\'d2\'b5\'e5\'b4\'c2 \'bd\'c7\'c7\'e0\'c0\'cc \'b5\'c7\'c1\'f6 \'be\'ca\'b4\'c2\'b0\'a1?\
\
\pard\pardeftab720\partightenfactor0

\f2\b\fs32 \cf2 class
\f3\b0 \cf0  E \{\
	
\f2\b \cf2 void
\f3\b0 \cf0  throwArithmeticException() \{\
		
\f2\b \cf2 throw
\f3\b0 \cf0  
\f2\b \cf2 new
\f3\b0 \cf0  ArithmeticException();\
	\}\
	
\f2\b \cf2 void
\f3\b0 \cf0  throwIOException1() \{\
		
\f2\b \cf2 try
\f3\b0 \cf0  \{\
			
\f2\b \cf2 throw
\f3\b0 \cf0  
\f2\b \cf2 new
\f3\b0 \cf0  IOException();\
		\} 
\f2\b \cf2 catch
\f3\b0 \cf0  (IOException \cf4 e\cf0 ) \{\
			\cf4 e\cf0 .printStackTrace();\
		\}\
	\}\
	
\f2\b \cf2 void
\f3\b0 \cf0  throwIOException2() 
\f2\b \cf2 throws
\f3\b0 \cf0  IOException \{\
		
\f2\b \cf2 throw
\f3\b0 \cf0  
\f2\b \cf2 new
\f3\b0 \cf0  IOException();\
	\}\
\}
\f0\fs40 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 - \'bf\'c0\'b7\'f9 \'c3\'b3\'b8\'ae\'c0\'c7 \'b5\'ce\'b0\'a1\'c1\'f6 \'b9\'e6\'b9\'fd\'a1\'a6 \'b4\'f8\'c1\'f6\'b1\'e2 / trycatch\
\

\f1\b \ul * \'bf\'b9\'bf\'dc\'c0\'c7 \'bc\'b1\'c1\'b6 - Throwable
\f0\b0 \ulnone \
- java.lang.Object (\'b8\'f0\'b5\'e7 \'c5\'ac\'b7\'a1\'bd\'ba\'c0\'c7 \'bd\'c3\'c1\'b6\'b0\'a1 \'b5\'ca)\
- \'b1\'d7 \'b9\'d8\'c0\'c7 \'bf\'a9\'b7\'af \'b0\'b4\'c3\'bc \'c1\'df .Throwable\'c0\'cc \'c0\'d6\'b4\'d9.\
(Object - Throwable - Exception - RuntimeException - ArithmeticException)\
- \'bf\'ec\'b8\'ae\'b0\'a1 \'b4\'f8\'c1\'f6\'b1\'e2\'b8\'a6 \'c7\'d2 \'bc\'f6 \'c0\'d6\'be\'fa\'b4\'f8 \'c0\'cc\'c0\'af\'b4\'c2 .Throwalbe\'c0\'cc\'b0\'c5\'b3\'aa \'b1\'d7 \'c7\'cf\'c0\'a7\'bf\'a1 \'c6\'f7\'c7\'d4\'b5\'c7\'be\'ee\'c0\'d6\'b1\'e2 \'b6\'a7\'b9\'ae\'c0\'cc\'b4\'d9.\
- \'c0\'a7\'c0\'c7 \'bb\'f3\'bc\'d3\'b0\'fc\'b0\'e8\'b4\'c2, \'c4\'da\'b5\'e5\'b8\'a6 \'c0\'db\'bc\'ba\'c7\'cf\'b4\'c2 \'bc\'f8\'bc\'ad\'bf\'a1\'b5\'b5 \'b0\'ed\'b7\'c1\'b5\'c8\'b4\'d9. (\'ba\'ce\'b8\'f0\'c5\'ac\'b7\'a1\'bd\'ba\'b0\'a1 \'b9\'d8\'bf\'a1 \'b5\'e9\'be\'ee\'b0\'a1\'be\'df \'b4\'f5 \'c0\'df \'b3\'aa\'b4\'ad \'bc\'f6 \'c0\'d6\'b4\'d9.)\
\
1. Throwable : \'b8\'f0\'b5\'e7 \'bf\'b9\'bf\'dc \'c5\'ac\'b7\'a1\'bd\'ba\'c0\'c7 \'ba\'ce\'b8\'f0\
\
1-1. Error : JVM\'c0\'cc\'b3\'aa \'c7\'cf\'b5\'e5\'bf\'fe\'be\'ee\'c0\'fb \'b9\'ae\'c1\'a6\'b0\'a1 \'b9\'df\'bb\'fd\'c7\'df\'c0\'bb \'b6\'a7 \'b5\'ee\'c0\'e5 (\'bf\'ec\'b8\'ae\'b0\'a1 \'c7\'d2 \'bc\'f6 \'c0\'d6\'b4\'c2 \'c0\'cf\'c0\'ba \'be\'f8\'b4\'d9..!)\
1-2. Exception\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
1-2-1. IOException\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 1-2-2. RuntimeException\
\
1-2-2-1. ArithmeticException\
\
- \'ba\'ce\'b8\'f0\'bf\'a1 RuntimeExcpetion\'c0\'cc \'c0\'d6\'b3\'c4 \'be\'f8\'b3\'aa\'bf\'a1 \'b5\'fb\'b6\'f3 \'c2\'f7\'c0\'cc\'b0\'a1 \'b9\'df\'bb\'fd\'c7\'d1\'b4\'d9.\
- \'ba\'ce\'b8\'f0 \'c1\'df\'bf\'a1 RuntimeException\'c0\'cc \'c0\'d6\'b4\'c2 \'bf\'b9\'bf\'dc\'b4\'c2 unchecked exception\'c0\'cc\'b6\'f3\'b0\'ed \'c7\'d1\'b4\'d9.\
- \'ba\'ce\'b8\'f0 \'c1\'df\'bf\'a1 RuntimeException\'c0\'cc \ul \'be\'f8\'b4\'c2\ulnone  \'bf\'b9\'bf\'dc\'b4\'c2 checked exception \'c0\'cc\'b6\'f3\'b0\'ed \'c7\'d1\'b4\'d9.\
- checked : try/catch\'b3\'aa throw\'b8\'a6 \'bb\'e7\'bf\'eb\'c7\'d8 \'bf\'b9\'bf\'dc\'b8\'a6 \'c3\'b3\'b8\'ae\'c7\'d8\'be\'df\'c7\'d1\'b4\'d9.\
- unchecked : \'c3\'b3\'b8\'ae\'c7\'cf\'c1\'f6 \'be\'ca\'be\'c6\'b5\'b5 \'b5\'c7\'b0\'ed, \'c7\'d2 \'c0\'cc\'c0\'af\'b5\'b5 \'b0\'c5\'c0\'c7 \'be\'f8\'b4\'d9.\
- \'b5\'fb\'b6\'f3\'bc\'ad, \'c0\'a7\'c0\'c7 \'c4\'da\'b5\'e5 \'c1\'df checked exception\'c0\'ce IOException\'c0\'ba \'bf\'b9\'bf\'dc\'b8\'a6 \'c3\'b3\'b8\'ae \'c7\'d8\'c1\'d8 \'b8\'f0\'be\'e7\'c0\'cc\'b0\'ed, unchecked exception\'c0\'ce ArithmeticExcpetion\'c0\'ba \
\'bf\'b9\'bf\'dc\'b8\'a6 \'c3\'b3\'b8\'ae\'c7\'cf\'c1\'f6 \'be\'ca\'be\'c6\'c1\'d8 \'b8\'f0\'be\'e7\'c0\'cc\'b4\'d9.\
\

\f1\b \ul * \'bb\'e7\'bf\'eb\'c0\'da \'c1\'a4\'c0\'c7 \'bf\'b9\'bf\'dc (\'b3\'aa\'b8\'b8\'c0\'c7 \'bf\'b9\'bf\'dc \'b8\'b8\'b5\'e9\'b1\'e2)
\f0\b0 \ulnone \
- \'ba\'b8\'c5\'eb\'c0\'ba \'c7\'a5\'c1\'d8 \'bf\'b9\'bf\'dc\'b8\'a6 \'bb\'e7\'bf\'eb\'c7\'cf\'b4\'c2 \'b0\'cd\'c0\'cc \'b1\'c7\'c0\'e5\'b5\'c8\'b4\'d9. (java \'b0\'b3\'b9\'df\'c0\'da\'bf\'a1\'b0\'d4 \'c0\'cd\'bc\'f7\'c7\'cf\'b1\'e2 \'b6\'a7\'b9\'ae)\
- \'b8\'b8\'b5\'e9\'be\'ee\'be\'df \'c7\'d1\'b4\'d9\'b8\'e9, \'c0\'da\'bd\'c5\'c0\'cc \'b8\'b8\'b5\'e9 \'bf\'b9\'bf\'dc\'b0\'a1 checked\'c0\'ce\'c1\'f6, unchecked\'c0\'ce\'c1\'f6 \'c8\'ae\'c0\'ce\'c7\'cf\'b1\'e2 \'a1\'a6\
- \'b1\'d7 \'bb\'f3\'c8\'b2\'c0\'bb \'b0\'b3\'bc\'b1\'c7\'d2 \'bf\'a9\'c1\'f6\'b0\'a1 \'c0\'d6\'c0\'bb \'b6\'a7\'b4\'c2 checked\'b8\'a6 \'bb\'e7\'bf\'eb\'c7\'cf\'b4\'c2 \'b0\'cd\'c0\'cc \'b9\'d9\'b6\'f7\'c1\'f7\
- \'bb\'e7\'bf\'eb\'c0\'da\'b0\'a1 \'b0\'b3\'bc\'b1\'c7\'d2 \'b0\'cd\'c0\'cc \'be\'f8\'b4\'d9, \'c8\'a4\'c0\'ba \'c1\'be\'b7\'e1\'bd\'c3\'c5\'b0\'b4\'c2 \'b0\'cd\'c0\'cc \'c3\'d6\'bc\'b1\'c0\'cc\'b4\'d9 \'bd\'cd\'c0\'bb \'b6\'a7\'b4\'c2 unchecked\'b8\'a6 \'bb\'e7\'bf\'eb\'c7\'cf\'b4\'c2 \'b0\'cd\'c0\'cc \'b9\'d9\'b6\'f7\'c1\'f7\
\
- \'c0\'fb\'c1\'a4\'bc\'b1\'c0\'bb \'c3\'a3\'b4\'c2 \'b0\'cd\'c0\'cc \'c1\'df\'bf\'e4\'c7\'cf\'b4\'d9.\
- ex : IOE : \'c6\'c4\'c0\'cf\'c0\'bb \'b8\'f8\'c3\'a3\'c0\'bd : \'ba\'b9\'b1\'b8 \'b0\'a1\'b4\'c9 ~ \'b0\'b3\'bc\'b1 \'bf\'a9\'c1\'f6 ~ checked\
- ex2 : \'b9\'e8\'bf\'ad \'c3\'ca\'b0\'fa - \'b1\'d7\'b3\'c9 \'c1\'be\'b7\'e1\'c7\'cf\'b4\'c2 \'b0\'cd\'c0\'cc \'b9\'d9\'b6\'f7\'c1\'f7 ~ unchecked\
\
(unchecked exception)\
\pard\pardeftab720\partightenfactor0

\f2\b\fs32 \cf2 package
\f3\b0 \cf0  java_tutorials.exception;\
\

\f2\b \cf2 class
\f3\b0 \cf0  \ul DivideException\ulnone  
\f2\b \cf2 extends
\f3\b0 \cf0  RuntimeException \{\
	DivideException()\{\
		
\f2\b \cf2 super
\f3\b0 \cf0 ();\
	\}\
	DivideException(String \cf4 message\cf0 )\{\
		
\f2\b \cf2 super
\f3\b0 \cf0 (\cf4 message\cf0 );\
	\}\
\}\
\

\f2\b \cf2 class
\f3\b0 \cf0  Calculator\{\
	
\f2\b \cf2 int
\f3\b0 \cf0  \cf3 left\cf0 , \cf3 right\cf0 ;\
	
\f2\b \cf2 public
\f3\b0 \cf0  
\f2\b \cf2 void
\f3\b0 \cf0  setOprands(
\f2\b \cf2 int
\f3\b0 \cf0  \cf4 left\cf0 , 
\f2\b \cf2 int
\f3\b0 \cf0  \cf4 right\cf0 ) \{\
		
\f2\b \cf2 this
\f3\b0 \cf0 .\cf3 left\cf0  = \cf4 left\cf0 ;\
		
\f2\b \cf2 this
\f3\b0 \cf0 .\cf3 right\cf0  = \cf4 right\cf0 ;\
	\}\
	
\f2\b \cf2 public
\f3\b0 \cf0  
\f2\b \cf2 void
\f3\b0 \cf0  divide() \{\
		
\f2\b \cf2 if
\f3\b0 \cf0 (\cf3 right\cf0  == 0) \{\
			
\f2\b \cf2 throw
\f3\b0 \cf0  
\f2\b \cf2 new
\f3\b0 \cf0  DivideException(\cf5 "0
\f0 \'c0\'b8\'b7\'ce
\f3  
\f0 \'b3\'aa\'b4\'ad
\f3  
\f0 \'bc\'f6
\f3  
\f0 \'be\'f8\'bd\'c0\'b4\'cf\'b4\'d9
\f3 ."\cf0 );\
		\}\
		System.
\f4\i\b \cf3 out
\f3\i0\b0 \cf0 .println(
\f2\b \cf2 this
\f3\b0 \cf0 .\cf3 left\cf0 /
\f2\b \cf2 this
\f3\b0 \cf0 .\cf3 right\cf0 );\
	\}\
\}\
\

\f2\b \cf2 public
\f3\b0 \cf0  
\f2\b \cf2 class
\f3\b0 \cf0  CalculatorDemo \{\
\
	
\f2\b \cf2 public
\f3\b0 \cf0  
\f2\b \cf2 static
\f3\b0 \cf0  
\f2\b \cf2 void
\f3\b0 \cf0  main(String[] \cf4 args\cf0 ) \{\
		Calculator \cf4 c1\cf0  = 
\f2\b \cf2 new
\f3\b0 \cf0  Calculator();\
		\cf4 c1\cf0 .setOprands(10,0);\
		
\f2\b \cf2 try
\f3\b0 \cf0  \{\
			\cf4 c1\cf0 .divide();\
		\} 
\f2\b \cf2 catch
\f3\b0 \cf0 (ArithmeticException \cf4 e\cf0 ) \{\
			System.
\f4\i\b \cf3 out
\f3\i0\b0 \cf0 .println(\cf4 e\cf0 .getMessage());\
		\}\
\
	\}\
\
\}\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs40 \cf0 \
- RuntimeException\'c0\'bb \'bb\'f3\'bc\'d3\'c7\'df\'c0\'b8\'b9\'c7\'b7\'ce \'bf\'b9\'bf\'dc\'c3\'b3\'b8\'ae\'b0\'a1 \'c7\'ca\'bf\'e4 \'be\'f8\'b4\'d9.\
- DevideException\'c0\'bb \'b8\'b8\'b5\'e9\'be\'ee\'c1\'d9 \'b6\'a7, \'bb\'fd\'bc\'ba\'c0\'da\'b8\'a6 \'b5\'ce\'b0\'b3 \'b8\'b8\'b5\'e9\'be\'ee\'c1\'d8\'b4\'d9. (\'bb\'fd\'bc\'ba\'c0\'da \'bc\'f6\'be\'f7 \'c2\'fc\'b0\'ed)\
\
(checked - try /catch)\
\pard\pardeftab720\partightenfactor0

\f2\b\fs32 \cf2 package
\f3\b0 \cf0  java_tutorials.exception;\
\

\f2\b \cf2 class
\f3\b0 \cf0  \ul DivideException\ulnone  
\f2\b \cf2 extends
\f3\b0 \cf0  Exception \{\
	DivideException()\{\
		
\f2\b \cf2 super
\f3\b0 \cf0 ();\
	\}\
	DivideException(String \cf4 message\cf0 )\{\
		
\f2\b \cf2 super
\f3\b0 \cf0 (\cf4 message\cf0 );\
	\}\
\}\
\

\f2\b \cf2 class
\f3\b0 \cf0  Calculator\{\
	
\f2\b \cf2 int
\f3\b0 \cf0  \cf3 left\cf0 , \cf3 right\cf0 ;\
	
\f2\b \cf2 public
\f3\b0 \cf0  
\f2\b \cf2 void
\f3\b0 \cf0  setOprands(
\f2\b \cf2 int
\f3\b0 \cf0  \cf4 left\cf0 , 
\f2\b \cf2 int
\f3\b0 \cf0  \cf4 right\cf0 ) \{\
		
\f2\b \cf2 this
\f3\b0 \cf0 .\cf3 left\cf0  = \cf4 left\cf0 ;\
		
\f2\b \cf2 this
\f3\b0 \cf0 .\cf3 right\cf0  = \cf4 right\cf0 ;\
	\}\
	
\f2\b \cf2 public
\f3\b0 \cf0  
\f2\b \cf2 void
\f3\b0 \cf0  divide() \{\
		
\f2\b \cf2 try
\f3\b0 \cf0  \{\
			
\f2\b \cf2 if
\f3\b0 \cf0 (\cf3 right\cf0  == 0) \{\
				
\f2\b \cf2 throw
\f3\b0 \cf0  
\f2\b \cf2 new
\f3\b0 \cf0  DivideException(\cf5 "0
\f0 \'c0\'b8\'b7\'ce
\f3  
\f0 \'b3\'aa\'b4\'ad
\f3  
\f0 \'bc\'f6
\f3  
\f0 \'be\'f8\'bd\'c0\'b4\'cf\'b4\'d9
\f3 ."\cf0 );\
			\}\
			System.
\f4\i\b \cf3 out
\f3\i0\b0 \cf0 .println(
\f2\b \cf2 this
\f3\b0 \cf0 .\cf3 left\cf0 /
\f2\b \cf2 this
\f3\b0 \cf0 .\cf3 right\cf0 );\
		\} 
\f2\b \cf2 catch
\f3\b0 \cf0  (DivideException \cf4 e\cf0 ) \{\
			\cf4 e\cf0 .printStackTrace();\
		\}\
	\}\
\}\
\

\f2\b \cf2 public
\f3\b0 \cf0  
\f2\b \cf2 class
\f3\b0 \cf0  CalculatorDemo \{\
\
	
\f2\b \cf2 public
\f3\b0 \cf0  
\f2\b \cf2 static
\f3\b0 \cf0  
\f2\b \cf2 void
\f3\b0 \cf0  main(String[] \cf4 args\cf0 ) \{\
		Calculator \cf4 c1\cf0  = 
\f2\b \cf2 new
\f3\b0 \cf0  Calculator();\
		\cf4 c1\cf0 .setOprands(10,0);\
		
\f2\b \cf2 try
\f3\b0 \cf0  \{\
			\cf4 c1\cf0 .divide();\
		\} 
\f2\b \cf2 catch
\f3\b0 \cf0 (ArithmeticException \cf4 e\cf0 ) \{\
			System.
\f4\i\b \cf3 out
\f3\i0\b0 \cf0 .println(\cf4 e\cf0 .getMessage());\
		\}\
\
	\}\
\
\}\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs40 \cf0 \
- checked exception\'c0\'ce Exception\'c0\'bb \'bb\'f3\'bc\'d3 \'c7\'df\'c0\'b8\'b9\'c7\'b7\'ce \'bf\'b9\'bf\'dc\'bf\'a1 \'b4\'eb\'c7\'d1 \'c3\'b3\'b8\'ae\'b0\'a1 \'c7\'ca\'bf\'e4\'c7\'cf\'b4\'d9.\
- \'c3\'b9\'b9\'f8\'c2\'b0 \'b9\'e6\'b9\'fd\'c0\'b8\'b7\'ce, divide() method\'bf\'a1 \'c1\'a4\'c0\'c7\'b5\'c8 \'ba\'ce\'ba\'d0\'c0\'bb try/catch\'b7\'ce \'c3\'b3\'b8\'ae\'c7\'d8 \'c1\'d6\'be\'fa\'b4\'d9.\
\
(checked - throw)\
\pard\pardeftab720\partightenfactor0

\f2\b\fs32 \cf2 package
\f3\b0 \cf0  java_tutorials.exception;\
\

\f2\b \cf2 class
\f3\b0 \cf0  \ul DivideException\ulnone  
\f2\b \cf2 extends
\f3\b0 \cf0  Exception \{\
	DivideException()\{\
		
\f2\b \cf2 super
\f3\b0 \cf0 ();\
	\}\
	DivideException(String \cf4 message\cf0 )\{\
		
\f2\b \cf2 super
\f3\b0 \cf0 (\cf4 message\cf0 );\
	\}\
\}\
\

\f2\b \cf2 class
\f3\b0 \cf0  Calculator\{\
	
\f2\b \cf2 int
\f3\b0 \cf0  \cf3 left\cf0 , \cf3 right\cf0 ;\
	
\f2\b \cf2 public
\f3\b0 \cf0  
\f2\b \cf2 void
\f3\b0 \cf0  setOprands(
\f2\b \cf2 int
\f3\b0 \cf0  \cf4 left\cf0 , 
\f2\b \cf2 int
\f3\b0 \cf0  \cf4 right\cf0 ) \{\
		
\f2\b \cf2 this
\f3\b0 \cf0 .\cf3 left\cf0  = \cf4 left\cf0 ;\
		
\f2\b \cf2 this
\f3\b0 \cf0 .\cf3 right\cf0  = \cf4 right\cf0 ;\
	\}\
	
\f2\b \cf2 public
\f3\b0 \cf0  
\f2\b \cf2 void
\f3\b0 \cf0  divide() 
\f2\b \cf2 throws
\f3\b0 \cf0  DivideException \{\
		
\f2\b \cf2 if
\f3\b0 \cf0 (\cf3 right\cf0  == 0) \{\
			
\f2\b \cf2 throw
\f3\b0 \cf0  
\f2\b \cf2 new
\f3\b0 \cf0  DivideException(\cf5 "0
\f0 \'c0\'b8\'b7\'ce
\f3  
\f0 \'b3\'aa\'b4\'ad
\f3  
\f0 \'bc\'f6
\f3  
\f0 \'be\'f8\'bd\'c0\'b4\'cf\'b4\'d9
\f3 ."\cf0 );\
		\}\
		System.
\f4\i\b \cf3 out
\f3\i0\b0 \cf0 .println(
\f2\b \cf2 this
\f3\b0 \cf0 .\cf3 left\cf0 /
\f2\b \cf2 this
\f3\b0 \cf0 .\cf3 right\cf0 );\
	\}\
\}\
\

\f2\b \cf2 public
\f3\b0 \cf0  
\f2\b \cf2 class
\f3\b0 \cf0  CalculatorDemo \{\
\
	
\f2\b \cf2 public
\f3\b0 \cf0  
\f2\b \cf2 static
\f3\b0 \cf0  
\f2\b \cf2 void
\f3\b0 \cf0  main(String[] \cf4 args\cf0 ) \{\
		Calculator \cf4 c1\cf0  = 
\f2\b \cf2 new
\f3\b0 \cf0  Calculator();\
		\cf4 c1\cf0 .setOprands(10,0);\
		
\f2\b \cf2 try
\f3\b0 \cf0  \{\
			\cf4 c1\cf0 .divide();\
		\} 
\f2\b \cf2 catch
\f3\b0 \cf0 (DivideException \cf4 e\cf0 ) \{\
			System.
\f4\i\b \cf3 out
\f3\i0\b0 \cf0 .println(\cf4 e\cf0 .getMessage());\
		\}\
\
	\}\
\
\}\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs40 \cf0 - \'b5\'ce \'b9\'f8\'c2\'b0 \'b9\'e6\'b9\'fd\'c0\'b8\'b7\'ce, divide method\'bf\'a1\'bc\'ad throws\'b7\'ce \'b4\'d9\'c0\'bd \'bb\'e7\'bf\'eb\'c0\'da\'bf\'a1\'b0\'d4 \'bf\'b9\'bf\'dc\'b8\'a6 \'b3\'d1\'b0\'e5\'b4\'d9.\
- \'b4\'d9\'c0\'bd \'bb\'e7\'bf\'eb\'c0\'da\'c0\'ce main\'c0\'fd\'bf\'a1\'bc\'ad try/catch\'b8\'a6 \'bb\'e7\'bf\'eb\'c7\'d8 \'bf\'b9\'bf\'dc\'b8\'a6 \'c3\'b3\'b8\'ae\'c7\'d8 \'c1\'d6\'be\'fa\'b4\'d9.\
\
(exception \'c5\'ac\'b7\'a1\'bd\'ba\'b7\'ce \'c1\'a4\'ba\'b8\'b8\'a6 \'c1\'d6\'b1\'e2)\
\pard\pardeftab720\partightenfactor0

\f2\b\fs32 \cf2 package
\f3\b0 \cf0  java_tutorials.exception;\
\

\f2\b \cf2 class
\f3\b0 \cf0  \ul DivideException\ulnone  
\f2\b \cf2 extends
\f3\b0 \cf0  Exception \{\
	
\f2\b \cf2 public
\f3\b0 \cf0  
\f2\b \cf2 int
\f3\b0 \cf0  \cf3 left\cf0 ;\
	
\f2\b \cf2 public
\f3\b0 \cf0  
\f2\b \cf2 int
\f3\b0 \cf0  \cf3 right\cf0 ;\
	\
	DivideException()\{\
		
\f2\b \cf2 super
\f3\b0 \cf0 ();\
	\}\
	DivideException(String \cf4 message\cf0 )\{\
		
\f2\b \cf2 super
\f3\b0 \cf0 (\cf4 message\cf0 );\
	\}\
	DivideException(String \cf4 message\cf0 , 
\f2\b \cf2 int
\f3\b0 \cf0  \cf4 left\cf0 , 
\f2\b \cf2 int
\f3\b0 \cf0  \cf4 right\cf0 )\{\
		
\f2\b \cf2 super
\f3\b0 \cf0 (\cf4 message\cf0 );\
		
\f2\b \cf2 this
\f3\b0 \cf0 .\cf3 left\cf0  = \cf4 left\cf0 ;\
		
\f2\b \cf2 this
\f3\b0 \cf0 .\cf3 right\cf0  = \cf4 right\cf0 ;\
	\}\
\}\
\

\f2\b \cf2 class
\f3\b0 \cf0  Calculator\{\
	
\f2\b \cf2 int
\f3\b0 \cf0  \cf3 left\cf0 , \cf3 right\cf0 ;\
	
\f2\b \cf2 public
\f3\b0 \cf0  
\f2\b \cf2 void
\f3\b0 \cf0  setOprands(
\f2\b \cf2 int
\f3\b0 \cf0  \cf4 left\cf0 , 
\f2\b \cf2 int
\f3\b0 \cf0  \cf4 right\cf0 ) \{\
		
\f2\b \cf2 this
\f3\b0 \cf0 .\cf3 left\cf0  = \cf4 left\cf0 ;\
		
\f2\b \cf2 this
\f3\b0 \cf0 .\cf3 right\cf0  = \cf4 right\cf0 ;\
	\}\
	
\f2\b \cf2 public
\f3\b0 \cf0  
\f2\b \cf2 void
\f3\b0 \cf0  divide() 
\f2\b \cf2 throws
\f3\b0 \cf0  DivideException \{\
		
\f2\b \cf2 if
\f3\b0 \cf0 (\cf3 right\cf0  == 0) \{\
			
\f2\b \cf2 throw
\f3\b0 \cf0  
\f2\b \cf2 new
\f3\b0 \cf0  DivideException(\cf5 "0
\f0 \'c0\'b8\'b7\'ce
\f3  
\f0 \'b3\'aa\'b4\'ad
\f3  
\f0 \'bc\'f6
\f3  
\f0 \'be\'f8\'bd\'c0\'b4\'cf\'b4\'d9
\f3 ."\cf0 , 
\f2\b \cf2 this
\f3\b0 \cf0 .\cf3 left\cf0 , 
\f2\b \cf2 this
\f3\b0 \cf0 .\cf3 right\cf0 );\
		\}\
		System.
\f4\i\b \cf3 out
\f3\i0\b0 \cf0 .println(
\f2\b \cf2 this
\f3\b0 \cf0 .\cf3 left\cf0 /
\f2\b \cf2 this
\f3\b0 \cf0 .\cf3 right\cf0 );\
	\}\
\}\
\

\f2\b \cf2 public
\f3\b0 \cf0  
\f2\b \cf2 class
\f3\b0 \cf0  CalculatorDemo \{\
\
	
\f2\b \cf2 public
\f3\b0 \cf0  
\f2\b \cf2 static
\f3\b0 \cf0  
\f2\b \cf2 void
\f3\b0 \cf0  main(String[] \cf4 args\cf0 ) \{\
		Calculator \cf4 c1\cf0  = 
\f2\b \cf2 new
\f3\b0 \cf0  Calculator();\
		\cf4 c1\cf0 .setOprands(10,0);\
		
\f2\b \cf2 try
\f3\b0 \cf0  \{\
			\cf4 c1\cf0 .divide();\
		\} 
\f2\b \cf2 catch
\f3\b0 \cf0 (DivideException \cf4 e\cf0 ) \{\
			System.
\f4\i\b \cf3 out
\f3\i0\b0 \cf0 .println(\cf4 e\cf0 .getMessage());\
			System.
\f4\i\b \cf3 out
\f3\i0\b0 \cf0 .println(\cf4 e\cf0 .\cf3 left\cf0 );\
			System.
\f4\i\b \cf3 out
\f3\i0\b0 \cf0 .println(\cf4 e\cf0 .\cf3 right\cf0 );\
		\}\
\
	\}\
\
\}\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs40 \cf0 - \'b4\'d9\'c0\'bd\'b0\'fa \'b0\'b0\'c0\'ba \'c4\'da\'b5\'e5\'b8\'a6 \'bb\'e7\'bf\'eb\'c7\'d8, \'bf\'ec\'b8\'ae\'b0\'a1 \'b8\'b8\'b5\'e7 \'bf\'b9\'bf\'dc \'c5\'ac\'b7\'a1\'bd\'ba\'bf\'a1 \'bf\'c0\'b7\'f9\'b0\'a1 \'b3\'af \'b4\'e7\'bd\'c3\'c0\'c7 left, right\'b0\'aa\'c0\'bb \'c0\'fa\'c0\'e5\'c7\'cf\'b0\'ed, \'b1\'d7\'b0\'cd\'c0\'bb \'bb\'e7\'bf\'eb\'c0\'da\'bf\'a1\'b0\'d4 \'be\'cb\'b7\'c1\'c1\'dc\'c0\'b8\'b7\'ce\'bc\'ad \'c0\'cc\'c0\'af\'b8\'a6 \'c1\'a6\'bd\'c3\'c7\'d8 \'c1\'d9 \'bc\'f6 \'c0\'d6\'b4\'d9.\
\
- \'b4\'d9\'bd\'c3 \'b5\'e9\'be\'ee\'be\'df\'c7\'d2\'b5\'ed\'a1\'a6\
\
\
\
\
}